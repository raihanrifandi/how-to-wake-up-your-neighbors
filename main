#include <iostream>
#include <windows.h>
#include <conio.h>
#include <stdio.h>
#include <stdlib.h> 
#include <ncurses/ncurses.h>
#include <fstream>
#include <time.h>
using namespace std;

// Global variables
#define SCREEN_WIDTH 90
#define SCREEN_HEIGHT 26
#define WIN_WIDTH 70 

HANDLE hCon = GetStdHandle(STD_OUTPUT_HANDLE); 
COORD c;

char keys[10];	
int keyPos[10][2];	
int score = 0; 
int hp = 10.0;

void color(int color) // Main Menu Highlighter
{
    SetConsoleTextAttribute(hCon,color);
}

void gotoxy(int x, int y) // Main Menu Highlighter
{
  
    c.X=x;
    c.Y=y;
    SetConsoleCursorPosition(hCon,c);
}

void hidecursor(bool visible, DWORD size) {
	if(size == 0)
		size = 20;	
	
	CONSOLE_CURSOR_INFO lpCursor;	
	lpCursor.bVisible = visible;
	lpCursor.dwSize = size;
	SetConsoleCursorInfo(hCon,&lpCursor);
} 

void drawBorder(){  
	for(int i=0; i<SCREEN_WIDTH; i++){ 
		gotoxy(i,SCREEN_HEIGHT); cout<<"|";
	}
	
	for(int i=0; i<SCREEN_HEIGHT; i++){
		gotoxy(0,i); cout<<"|";
		gotoxy(SCREEN_WIDTH,i); cout<<"|";
	}
	for(int i=0; i<SCREEN_HEIGHT; i++){
		gotoxy(WIN_WIDTH,i); cout<<"|";
	}
}

void game_over() {
	initscr();
	mvprintw(20, 40,"  ___   _   __  __ ___    _____   _____ ___");
	mvprintw(21, 40," / __| /_\\ |  \\/  | __|  / _ \\ \\ / / __| _ \\");
	mvprintw(22, 40,"| (_ |/ _ \\| |\\/| | _|  | (_) \\ V /| _||   /");
	mvprintw(23, 40," \\___/_/ \\_\\_|  |_|___|  \\___/ \\_/ |___|_|_\\");
	mvprintw(26,50,"PRESS ANY KEY TO BACK TO MAIN MENU");
	refresh();
	getch();
	endwin();
	

}

void generator(int ind){
	keys[ind] = 65+rand()%25;
	keyPos[ind][0] = 2 + rand()%(WIN_WIDTH-2);
	keyPos[ind][1] = 1;
}
void displayer(int ind){
	if( keyPos[ind][0] != 0 ){
		gotoxy(keyPos[ind][0], keyPos[ind][1]);   cout<<keys[ind];  
	} 
}
void buttonPressed(int ind){
	if( keyPos[ind][0] != 0 ){
		gotoxy(keyPos[ind][0], keyPos[ind][1]);   cout<<" ";  
	}
}
void reset(int ind){
	buttonPressed(ind);
	generator(ind);
}

void updateScore(){
	gotoxy(WIN_WIDTH + 7, 5);cout<<"Score: "<<score<<endl;
	
}

void healthPoint(){
	gotoxy(WIN_WIDTH + 7, 6);cout<<"HP: "<<hp<<endl;
}

void play(){
	score = 0;
	hp = 10.0;
	for(int i=0; i<10; i++){
		keyPos[i][0] = keyPos[i][1] = 1;	
	}
	 
	system("cls"); 
	drawBorder(); 
	updateScore();
	healthPoint();
	
	for(int i=0; i<10; i++)
		generator(i); 
		
	
		while(1){
		if(kbhit()){
			char ch = _getch();
			for(int i=0; i<10; i++){
				if( ch == keys[i] || ch-32 == keys[i] ){
					reset(i);
					score++;
					updateScore();
				}
			}
			if(ch==27){ // when esc button is pressed, then it will exit from loop
				break;
			}
		} 
		
		for(int i=0; i<10; i++)
			displayer(i);  
			
		Sleep(250); 
		
		for(int i=0; i<10; i++){
			buttonPressed(i);  
			keyPos[i][1] += 1;
			if( keyPos[i][1] > SCREEN_HEIGHT ){
				reset(i);
				hp--;
				healthPoint();
				if(hp<=1.0){
				game_over();
				return;
				
				
			}
		}
	}
}

}


// game banner
void header(string filename){    
	ifstream myfile ("header.txt");
	string generate;
	if(myfile.is_open()){
			while(getline(myfile, generate)){
			cout << generate << endl;
			}myfile.close();
	}else {
		cout << "Banner is not Displayed";
	}
}

void help(){
system("cls");
initscr();
mvprintw(19,55, "CARA BERMAIN (TEKAN ESC UNTUK KEMBALI KE MENU)");
mvprintw(20,55,",---,---,---,---,---,---,---,---,---,---,---,---,---,-------,");
mvprintw(21,55,"|1/2| 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 0 | + | ' | <-    |");
mvprintw(22,55,"|---'-,-'-,-'-,-'-,-'-,-'-,-'-,-'-,-'-,-'-,-'-,-'-,-'-,-----|");
mvprintw(23,55,"| ->| | Q | W | E | R | T | Y | U | I | O | P | ] | ^ |     |");
mvprintw(24,55,"|-----',--',--',--',--',--',--',--',--',--',--',--',--'|    |");
mvprintw(25,55,"| Caps | A | S | D | F | G | H | J | K | L |   | [ | * |    |");
mvprintw(26,55,"|----,-'-,-'-,-'-,-'-,-'-,-'-,-'-,-'-,-'-,-'-,-'-,-'---'----|");
mvprintw(27,55,"|    | < | Z | X | C | V | B | N | M | , | . | - |          |");
mvprintw(28,55,"|----'-,-',--'--,'---'---'---'---'---'---'-,-'---',--,------|");
mvprintw(29,55,"| ctrl |  | alt |                          |altgr |  | ctrl |");
mvprintw(30,55,"'------'  '-----'--------------------------'------'  '------'");
mvprintw(31,55,"1. Terdapat beberapa huruf acak yang muncul dari atas");
mvprintw(32,55,"2. Tekan tombol pada keyboard anda untuk menghilangkan huruf tersebut");
mvprintw(33,55,"3. Tepat ketika anda menekan tombol keyboard yang sesuai, anda akan mendapatkan skor");
mvprintw(34,55,"4. Jangan sampai huruf tersebut menyentuh tanah atau nyawa anda akan berkurang");
	getch();
	refresh();
	endwin();
}


void aboutUs(){
	
	
}


void main_menu(bool trigger = false)
{
	do{
    int Set[] = {7,7,7,7};
    int counter = 3;   
	char key;
	
    
	
    for(int i=0;;)
    {
    	gotoxy(75,45);
        color(Set[0]);
        cout<<"1. Play";

        gotoxy(75,46);
        color(Set[1]);
        cout<<"2. Score";

        gotoxy(75,47);
        color(Set[2]);
        cout<<"3. Help";

        gotoxy(75,48);
        color(Set[3]);
        cout<<"4. About Us";

        key = _getch();

        if(key == 72 && (counter >=2 && counter <= 5))
        {
            counter--;
        }
        if(key == 80 && (counter >=1 && counter <= 4))
        {
            counter++;
        }
        if(key == '\r')
        {
            if(counter == 1)
            {
            	play();
            }
            if(counter == 2)
            {
               
            }
            if(counter == 3)
            {
               help();
            }
            if(counter == 4)
            {
            
            }
        }

        Set[0] = 7;
        Set[1] = 7;
        Set[2] = 7;
        Set[3] = 7;
        Set[4] = 7;

        if(counter == 1)
        {
            Set[0] = 11;
        }
        if(counter == 2)
        {
            Set[1] = 12;
        }
        if(counter == 3)
        {
            Set[2] = 13;
        }
        if(counter == 4)
        {
            Set[3] = 14;
        }
    }
}while (trigger!=true);
}

int main () {
	hidecursor(0,0); 
	srand( (unsigned)time(NULL)); 
	string filename = "header.txt";
	header(filename);
	main_menu();
	return 0;
}
